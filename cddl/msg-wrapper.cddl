; =====================================================================
; --- SATP Message (Entry Point) ---
; =====================================================================

satp-message = {
  ; --- Stage 1 ---
  ? verifiedOriginatorEntityId:          wrapped-vlei-lei-id,
  ? verifiedBeneficiaryEntityId:         wrapped-vlei-lei-id,
  ? senderGatewayOwnerId:                wrapped-vlei-lei-id,
  ? receiverGatewayOwnerId:               wrapped-vlei-lei-id,

  ? senderGatewayId:                     wrapped-vlei-ecr,
  ? recipientGatewayId:                  wrapped-vlei-ecr,
  ? senderGatewayNetworkId:              wrapped-vlei-ecr,
  ? recipientGatewayNetworkId:           wrapped-vlei-ecr,

  ? originatorPubkey:                    wrapped-key,
  ? beneficiaryPubkey:                   wrapped-key,
  ? senderGatewaySignaturePublicKey:     wrapped-key,
  ? receiverGatewaySignaturePublicKey:   wrapped-key,
  ? senderGatewayDeviceIdentityPubkey:   wrapped-key,
  ? receiverGatewayDeviceIdentityPubkey: wrapped-key,

  ; --- Stage 2 ---
  ? assetControllerCredential:           any-wrapped-vlei,
  ? lockEvidenceIssuerCredential:        any-wrapped-vlei,
  ? lockEvidenceVerificationKey:         wrapped-key,

  ; --- Stage 3 ---
  ? commitAuthorizingCredential:         any-wrapped-vlei,
  ? commitVerificationKey:               wrapped-key,
  ? postCommitSecureChannelKey:          wrapped-key
}

; =====================================================================
; --- Wrapped vLEI Objects ---
; =====================================================================

; Specific profile wrappers
wrapped-vlei-lei-id = { content: vlei-profile-content(media-root, prof-lei-id), payload: bstr / tstr }
wrapped-vlei-ecr    = { content: vlei-profile-content(media-root, prof-ecr),    payload: bstr / tstr }
wrapped-vlei-oor    = { content: vlei-profile-content(media-root, prof-oor),    payload: bstr / tstr }
wrapped-vlei-lar    = { content: vlei-profile-content(media-root, prof-lar),    payload: bstr / tstr }
wrapped-vlei-qvi    = { content: vlei-profile-content(media-root, prof-qvi),    payload: bstr / tstr }
wrapped-vlei-vra    = { content: vlei-profile-content(media-root, prof-vra),    payload: bstr / tstr }

; Convenience group for "accept any vLEI credential"
any-wrapped-vlei =
    wrapped-vlei-lei-id /
    wrapped-vlei-ecr /
    wrapped-vlei-oor /
    wrapped-vlei-lar /
    wrapped-vlei-qvi /
    wrapped-vlei-vra

; =====================================================================
; --- Generic Profile Content Rule ---
; =====================================================================

vlei-profile-content(root: tstr, profile: tstr) =
  tstr .regexp
    "^application/" // root // "\\+" // serializations //
    ";profile=\\\"urn:vlei:" // profile // "\\\"" //
    param-tail
  / uint

; =====================================================================
; --- Enumerations ---
; =====================================================================

; Top-level Media Roots (extensible for future)
media-root = "acdc" / "said"

; vLEI Profile IDs
prof-lei-id = "lei-id"
prof-ecr    = "ecr"
prof-oor    = "oor"
prof-lar    = "lar"
prof-qvi    = "qvi"
prof-vra    = "vra"

; Supported Serialization Suffixes
serializations = "json" / "cbor" / "msgpk" / "cesr"

; =====================================================================
; --- Parameters ---
; =====================================================================

; Tail parameters after profile â€” tighten as needed or
; substitute original acdc-param-tail regex for stricter match
param-tail = "" / ";".*

; =====================================================================
; --- Wrapped Key Definitions ---
; =====================================================================

wrapped-key = $key-type

$key-type /= cose-key
$key-type /= jwk-key
$key-type /= pkix-key

cose-key = {
  content: tstr .regexp "^application/cose;cose-type=\\\"cose-key\\\"$" / uint,
  payload: bstr
}

jwk-key = {
  content: tstr .regexp "^application/jwk\\+json$" / uint,
  payload: tstr
}

pkix-key = {
  media-type: "application/pkix-cert",
  encoding: "PEM" / "DER",
  payload: tstr / bstr
}
