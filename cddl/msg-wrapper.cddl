
; =====================================================================
; --- SATP Message (Entry Point) ---
; =====================================================================

satp-message = {
  ; --- Stage 1 ---
  ? verifiedOriginatorEntityId: wrapped-vlei ; always "leid"
  ? verifiedBeneficiaryEntityId: wrapped-vlei ; always "leid"
  ? senderGatewayOwnerId: wrapped-vlei ; always "leid"
  ? receiverGatewayOwnerId: wrapped-vlei ; always "leid"

  ? senderGatewayId: wrapped-vlei ; always "ecr"
  ? recipientGatewayId: wrapped-vlei ; always "ecr"
  ? senderGatewayNetworkId: wrapped-vlei ; always "ecr"
  ? recipientGatewayNetworkId: wrapped-vlei ; always "ecr"

  ? originatorPubkey: wrapped-key
  ? beneficiaryPubkey: wrapped-key
  ? senderGatewaySignaturePublicKey: wrapped-key
  ? receiverGatewaySignaturePublicKey: wrapped-key
  ? senderGatewayDeviceIdentityPubkey: wrapped-key
  ? receiverGatewayDeviceIdentityPubkey: wrapped-key

  ; --- Stage 2 ---
  ? assetControllerCredential: wrapped-vlei ; can be "leid", "ecr" or "oor"
  ? lockEvidenceIssuerCredential: wrapped-vlei ; can be "leid", "ecr" or "oor"
  ? lockEvidenceVerificationKey: wrapped-key

  ; --- Stage 3 ---
  ? commitAuthorizingCredential: wrapped-vlei ; can be "leid", "ecr" or "oor"
  ? commitVerificationKey: wrapped-key
  ? postCommitSecureChannelKey: wrapped-key
}

; =====================================================================
; --- Wrapped vLEI Payloads ---
; =====================================================================

wrapped-vlei = {
 content: content-ref
 payload: bstr / tstr
}

content-ref = non-empty<{ 
 ? mt: vlei-media-type ; TBA e.g., "application/acdc+json"
 ? cf: uint ; TBA content format id
 ? cbt: bool ; payload contains CBOR tagged content in the TN() range if true, if false not cbor tagged and "mt" is required
 ? oid: tstr ; generated from content-format-id e.g., "1.3.6.1.4.1.37476.2.1.5"
}>

; =====================================================================
; --- Wrapped Key Definitions ---
; =====================================================================

wrapped-key = $key-type
$key-type /= cose-key
$key-type /= jwk-key
$key-type /= pkix-key

cose-key = {
 content: "application/cose;cose-type=cose-key" / uint,
 encoding: "cbor" / "base64",
 payload: bstr / tstr
}

jwk-key = {
  content: "application/jwk+json" / uint,
  payload: tstr
}

pkix-key = {
  content: "application/pkix-cert" / uint,
  encoding: "PEM" / "DER",
  payload: tstr / bstr
}

non-empty<M> = (M) .and ({ + any => any })
